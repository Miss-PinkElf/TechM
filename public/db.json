{
  "articles": [
    {
      "id": "23",
      "type": "article",
      "articleId": null,
      "title": "深入 React Hooks：useEffect 的常见陷阱",
      "content": "useEffect 是 React 中最强大的 Hook 之一，但也是最容易被误用的。本文将深入探讨 useEffect 的一些常见陷阱，例如无限循环、错误的依赖项数组以及如何处理数据获取...",
      "author": {
        "id": "user-101",
        "name": "React 大师",
        "avatarUrl": "https://i.pravatar.cc/150?u=user-101"
      },
      "imageUrl": "https://images.unsplash.com/photo-1633356122544-f134324a6cee?q=80&w=2070&auto=format&fit=crop",
      "detailInfo": {
        "ifLike": true,
        "likeNum": 512,
        "commentNum": 2,
        "publicDate": "1750405155448"
      },
      "reply": []
    },
    {
      "id": "24",
      "type": "article",
      "articleId": null,
      "title": "Spring Boot 3 与虚拟线程初探",
      "content": "随着 Java 21 的发布，虚拟线程（Virtual Threads）为高并发应用带来了革命性的性能提升。本文将指导你如何在 Spring Boot 3 项目中启用并利用虚拟线程，并对比其与传统平台线程的性能差异。",
      "author": {
        "id": "user-202",
        "name": "Java 布道者",
        "avatarUrl": "https://i.pravatar.cc/150?u=user-202"
      },
      "imageUrl": "https://images.unsplash.com/photo-1522252234503-e356532cafd5?q=80&w=1925&auto=format&fit=crop",
      "detailInfo": {
        "ifLike": false,
        "likeNum": 1024,
        "commentNum": 1,
        "publicDate": "1659405179809"
      },
      "reply": []
    }
  ],
  "comments": [
    {
      "id": "1750408920361",
      "articleId": "23",
      "content": "313123",
      "author": {
        "id": "user-guest",
        "name": "访客",
        "avatarUrl": "https://i.pravatar.cc/150?u=user-guest"
      },
      "detailInfo": {
        "ifLike": false,
        "likeNum": 0,
        "commentNum": 0,
        "publicDate": "1750408920361"
      },
      "reply": []
    },
    {
      "id": "1750408923520",
      "articleId": "23",
      "content": "3131",
      "author": {
        "id": "user-guest",
        "name": "访客",
        "avatarUrl": "https://i.pravatar.cc/150?u=user-guest"
      },
      "detailInfo": {
        "ifLike": false,
        "likeNum": 0,
        "commentNum": 0,
        "publicDate": "1750408923520"
      },
      "reply": []
    },
    {
      "id": "1750409117570",
      "articleId": "23",
      "content": "AS下得厨房v改变好几年没看，l",
      "author": {
        "id": "user-guest",
        "name": "访客",
        "avatarUrl": "https://i.pravatar.cc/150?u=user-guest"
      },
      "detailInfo": {
        "ifLike": false,
        "likeNum": 0,
        "commentNum": 0,
        "publicDate": "1750409117570"
      },
      "reply": []
    },
    {
      "id": "1750476645884",
      "articleId": "23",
      "content": "····",
      "author": {
        "id": "user-guest",
        "name": "访客",
        "avatarUrl": "https://i.pravatar.cc/150?u=user-guest"
      },
      "detailInfo": {
        "ifLike": false,
        "likeNum": 0,
        "commentNum": 0,
        "publicDate": "1750476645884"
      },
      "reply": []
    }
  ],
  "getImage": [
    {
      "url": "/image/1.png",
      "id": "49cd"
    },
    {
      "url": "/image/2.png",
      "id": "5115"
    },
    {
      "url": "/image/3.png",
      "id": "406d"
    },
    {
      "url": "/image/4.png",
      "id": "2bba"
    },
    {
      "url": "/image/5.png",
      "id": "ea34"
    }
  ],
  "getAllArticle": [
    {
      "id": "23",
      "type": "article",
      "articleId": null,
      "title": "深入 React Hooks：useEffect 的常见陷阱",
      "content": "useEffect 是 React 中最强大的 Hook 之一，但也是最容易被误用的。本文将深入探讨 useEffect 的一些常见陷阱，例如无限循环、错误的依赖项数组以及如何处理数据获取...",
      "author": {
        "id": "user-101",
        "name": "React 大师",
        "avatarUrl": "https://i.pravatar.cc/150?u=user-101"
      },
      "imageUrl": "https://images.unsplash.com/photo-1633356122544-f134324a6cee?q=80&w=2070&auto=format&fit=crop",
      "detailInfo": {
        "ifLike": true,
        "likeNum": 512,
        "commentNum": 2,
        "publicDate": "1750405155448"
      }
    }
  ],
  "authorsRank": [
    {
      "id": "author-001",
      "name": "陳怡君",
      "avatarUrl": "https://placehold.co/100x100/E91E63/FFFFFF?text=C",
      "popular": 99.8,
      "followerNum": 85432
    },
    {
      "id": "author-002",
      "name": "林志明",
      "avatarUrl": "https://placehold.co/100x100/2196F3/FFFFFF?text=L",
      "popular": 98.5,
      "followerNum": 82109
    },
    {
      "id": "author-003",
      "name": "黃曉玲",
      "avatarUrl": "https://placehold.co/100x100/4CAF50/FFFFFF?text=H",
      "popular": 97.9,
      "followerNum": 78556
    },
    {
      "id": "author-004",
      "name": "張偉",
      "avatarUrl": "https://placehold.co/100x100/FFC107/000000?text=Z",
      "popular": 96.2,
      "followerNum": 75021
    },
    {
      "id": "author-005",
      "name": "李婷婷",
      "avatarUrl": "https://placehold.co/100x100/9C27B0/FFFFFF?text=L",
      "popular": 95.8,
      "followerNum": 69880
    },
    {
      "id": "author-006",
      "name": "王文雄",
      "avatarUrl": "https://placehold.co/100x100/F44336/FFFFFF?text=W",
      "popular": 94.1,
      "followerNum": 68123
    },
    {
      "id": "author-007",
      "name": "吳靜宜",
      "avatarUrl": "https://placehold.co/100x100/00BCD4/FFFFFF?text=W",
      "popular": 92.7,
      "followerNum": 65432
    },
    {
      "id": "author-008",
      "name": "劉俊彥",
      "avatarUrl": "https://placehold.co/100x100/8BC34A/FFFFFF?text=L",
      "popular": 90.3,
      "followerNum": 61098
    },
    {
      "id": "author-009",
      "name": "蔡佳宏",
      "avatarUrl": "https://placehold.co/100x100/FF9800/FFFFFF?text=C",
      "popular": 88.6,
      "followerNum": 58774
    },
    {
      "id": "author-010",
      "name": "楊淑芬",
      "avatarUrl": "https://placehold.co/100x100/607D8B/FFFFFF?text=Y",
      "popular": 87.1,
      "followerNum": 55123
    },
    {
      "id": "author-011",
      "name": "許家豪",
      "avatarUrl": "https://placehold.co/100x100/795548/FFFFFF?text=H",
      "popular": 85.4,
      "followerNum": 52001
    },
    {
      "id": "author-012",
      "name": "鄭美玲",
      "avatarUrl": "https://placehold.co/100x100/3F51B5/FFFFFF?text=Z",
      "popular": 84.9,
      "followerNum": 49876
    }
  ]
}